[x] setup basic gamestate
[x] setup basic gamedata
[x] create start and end turns
[x] display start and end turn events
[x] create draw phase
    [x] initialize decks
    [x] create phase
    [x] log phase change event
    [x] add card from top of deck to top of hand
[x] display draw event
[x] create clock phase
    [x] log phase change
    [x] ask turn_player what card to clock (or none)
    [x] move chosen card top of the clock
    [x] log clocked card
    [x] draw 2 cards
[x] move state changing functions to the PlayerState, so we can unit test them and leave the rules engine to handling IO
    [x] draw_card
    [x] clock draw 2
[x] move clock_action to seperate function so it's more testable
[x] pass the drawn CardID to the io function
[x] change api to take index into options list, rather than taking card_id
[x] add choice context
[x] implement hand limit at end of turn
    [x] add the hand limit to each player
    [x] modify the end phase to check if they're over the hand limit
    [x] ask the user, what cards to discard over the handlimit
    [x] put those cards into the waiting room
        [x] make waiting room
        [x] take cards out of hand
        [x] put them on top of waiting room
[] handle leveling
    [] create interrupt processing for leveling
    [] ask choice to choose what card to level
    [] move card to level zone
    [] log leveling event
[] handle refreshing
    [] create interrupt processing for refreshing
    [] make sure that player gets to choose between refresh and level, when they both happen at the same time
    [] move waiting room to deck
    [] add a point to the refresh point
    [] handle the refresh point at the correct timing
[] handle losing
    [] implement loss checking
        [] level 4
        [] empty waiting room, empty library
[] start adding integration tests

Maybes:

[] move to taking io in by hand rather than being a feature of the rules engine
